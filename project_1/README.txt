GCC Version

gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Copyright (C) 2019 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

ONE TIME PAD

otpEncryption:
Αρχικά, η συνάρτηση παίρνει ως όρισμα το plaintext που δόθηκε από το χρήστη.
Στη συνέχεια, γίνεται filtering του plaintext από τυχόν χαρακτήρες που δεν
μπορούν να τυπωθούν ή από αυτούς που δεν ανήκουν στο σύνολο [0-9A-Za-z].
Έπειτα, δημιουργείται το μοναδικό κλειδί που θα χρησιμοποιηθεί για την 
κωδικοποίηση και την αποκωδικοποιήση και αποθηκεύεται σε μία global static
μεταβλητή, που ορίζεται στο simple_crypto.h.
Με έναν pointer στο "καθαρό" plaintext και έναν στο global key, εκτελείται
ένα iteration πάνω σε όλα τα γράμματά τους μέχρι το πρόγραμμα να συναντήσει
τον κενό χαρακτήρα ('\0'). Σε κάθε επανάληψη, γίνεται η πράξη XOR ανάμεσα 
στις τιμές των pointers στο input και στο key.
Τέλος επιστρέφεται το ciphertext.

otpDecryption:
Αρχικά, η συνάρτηση παίρνει ως όρισμα το ciphertext που δημιουργήθηκε από 
την otpEncryption.
Με έναν pointer στο ciphertext και έναν στο global key που έχει δημιουργηθεί
από την otpEncryption, εκτελείται ένα iteration πάνω σε όλα τα γράμματά τους
μέχρι το πρόγραμμα να συναντήσει τον κενό χαρακτήρα ('\0'). Σε κάθε
επανάληψη, γίνεται η πράξη XOR ανάμεσα στις τιμές των pointers στο input και
στο key, όντας η αντίθετη πράξη του XOR (με διπλό XOR παίρνεις την αρχική
τιμή, πριν το εφαρμόσεις την πρώτη φορά).
Τέλος επιστρέφεται το plaintext.


CAESAR'S CIPHER

caesarEncryption:
Αρχικά, η συνάρτηση παίρνει ως όρισμα το plaintext που δόθηκε από το χρήστη
και το key.
Στη συνέχεια, γίνεται filtering του plaintext από τυχόν χαρακτήρες που δεν
μπορούν να τυπωθούν ή από αυτούς που δεν ανήκουν στο σύνολο [0-9A-Za-z]. Με
έναν pointer στο plaintext, εκτελείται ένα iteration πάνω σε όλα τα 
γράμματά τους μέχρι το πρόγραμμα να συναντήσει τον κενό χαρακτήρα ('\0'). Σε
κάθε επανάληψη γίνεται έλεγχος για το διάστημα στο οποίο θα ανήκει η τιμή 
του pointer + shift/key. Διακρίνονται 9 περιπτώσεις ανάλογα με το διάστημα
στο οποίο ανήκει αρχικά το *p (0-9, Α-Ζ, a-z) και ανάλογα με το διάστημα στο
οποίο θα μετατραπεί μετά την πρόσθεση του key. Καθώς ανάμεσα στα παραπάνω 
σύνολα υπάρχουν επιπρόσθετοι χαρακτήρες, για τον υπολογισμό της νέας τιμής 
του χαρακτήρα χρησιμοποιούνται και τα gap_1 = 'A'-'9'-1 και gap_2 = 
'a'-'Z'-1.
Τέλος επιστρέφεται το ciphertext.

caesarDecryption:
Αρχικά, η συνάρτηση παίρνει ως όρισμα το ciphertext που δημιουργήθηκε από 
την caesarEncryption και το key που δόθηκε νωρίτερα.
Για το decryption ακολουθείται ακριβώς η αντίθετη διαδικασία σε σχέση με το 
encryption, δηλαδή αντί για πρόσθεση του key, γίνεται αφαίρεση.
Τέλος επιστρέφεται το plaintext.


VIGENERE'S CIPHER

vigenereEncryption:
Αρχικά, η συνάρτηση παίρνει ως όρισμα το plaintext που δόθηκε από το χρήστη 
και το key.
Στη συνέχεια, γίνεται η εκκαθάριση του plaintext και του key από τυχόν 
χαρακτήρες που δεν μπορούν να τυπωθούν ή από αυτούς που δεν ανήκουν στο 
σύνολο A-Z. 
Έπειτα, γίνεται το extension του key, έτσι ώστε το μήκος του να είναι ίδιο 
με αυτό του plain text με duplication.
Στη συνέχεια, υπολογίζεται το offset = *keyPointer - 'A', δηλαδή η απόστασή
του από το πρώτο γράμμα του αλφαβήτου μας, με βάση το οποίο γίνεται η
κωδικοποίηση.
Με έναν pointer στο plaintext και έναν στο key, εκτελείται ένα iteration
πάνω σε όλα τα γράμματά τους μέχρι το πρόγραμμα να συναντήσει τον κενό 
χαρακτήρα ('\0'). Σε κάθε επανάληψη γίνεται έλεγχος για το διάστημα στο 
οποίο θα ανήκει η τιμή του pointer + offset. Διακρίνονται 2 περιπτώσεις 
ανάλογα με το διάστημα στο οποίο το *p θα μετατραπεί μετά την πρόσθεση του 
key.
Τέλος επιστρέφεται το ciphertext.

vigenereDecryption:
Αρχικά, η συνάρτηση παίρνει ως όρισμα το ciphertext που δημιουργήθηκε από 
την vigenereEncryption και το key που δόθηκε νωρίτερα.
Για το decryption ακολουθείται ακριβώς η αντίθετη διαδικασία σε σχέση με το 
encryption, δηλαδή αντί για πρόσθεση του key, γίνεται αφαίρεση.
Τέλος επιστρέφεται το plaintext.


HELPER FUNCTIONS

scan:
Μια συνάρτηση η οποία δεσμεύει δυναμικά χώρο για το εισαγώμενο κείμενο σε μια
μεταβλητή χρησιμοποιώντας την εντολή realloc.

safePrint:
Μια συνάρτηση για την "ασφαλή" εκτύπωση όλων των χαρακτήρων. Αν είναι μη-εκτυπώσιμος
χαρακτήρας, εκτυπώνει τη δεκαεξαδική τιμή του, διαφορετικά κανονικά.

filterInput:
Εφαρμόζει filtering σε ένα string. Συγκεκριμένα, απαλοίφει όλους τους χαρακτήρες 
που δεν ανήκουν στο σύνολο [a-zA-Z0-9].

filterInputUppercase:
Εφαρμόζει filtering σε ένα string. Συγκεκριμένα, απαλοίφει όλους τους χαρακτήρες 
που δεν ανήκουν στο σύνολο [A-Z]. 

otpKeyGenerate:
Μια συνάρτηση που δημιουργεί μια ψευδοτυχαία σειρά γραμμάτων μήκους όσο το μέγεθος
της λέξης που εισάγεται και την αποθηκεύει στην global static μεταβλητή otpKey.

vigenereKeySpread:
Συνάρτηση η οποία μεγαλώνει το μήκος μιας λέξης αναπαράγοντας με διπλοτυπία τα 
γράμματα ή μειώνει τους χαρακτήρες της, ανάλογα με το μήκος του plaintext που 
πρόκειται να κρυπτογραφηθεί με τη μέθοδο Vigenere.